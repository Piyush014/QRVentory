name: Release Builder

on:
  push:
    branches:
      - 'release'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Release App
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup Android SDK
        run: |
          yes | sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platforms;android-34" "build-tools;34.0.0"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

#      # Write Google Services JSON
#      - name: Write google-services.json
#        uses: DamianReeves/write-file-action@v1.3
#        with:
#          path: app/google-services.json
#          contents: ${{ secrets.GOOGLE_SERVICES_TEXT }}
#          write-mode: overwrite
#
#      # Write Client Secrets JSON
#      - name: Write client_secrets.json
#        uses: DamianReeves/write-file-action@v1.3
#        with:
#          path: app/src/main/assets/client_secrets.json
#          contents: ${{ secrets.CLIENT_SECRETS_TEXT }}
#          write-mode: overwrite

      - name: Build App and Run Unit Tests
        run: ./gradlew spotlessCheck assembleStandardRelease testStandardReleaseUnitTest --stacktrace

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/standard/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          # Remove this line if you don't want to use ALIAS
          alias: ${{ secrets.ALIAS }}

      - name: Clean Up Build Artifacts
        run: |
          set -e
          declare -A APKS=(
            ["QRVentory.apk"]="app-standard-universal-release-unsigned-signed.apk"
            ["QRVentory-arm64-v8a.apk"]="app-standard-arm64-v8a-release-unsigned-signed.apk"
            ["QRVentory-armeabi-v7a.apk"]="app-standard-armeabi-v7a-release-unsigned-signed.apk"
            ["QRVentory-x86.apk"]="app-standard-x86-release-unsigned-signed.apk"
            ["QRVentory-x86_64.apk"]="app-standard-x86_64-release-unsigned-signed.apk"
          )
          for apk in "${!APKS[@]}"; do
            cp app/build/outputs/apk/standard/release/${APKS[$apk]} $apk
            sha=$(sha256sum $apk | awk '{ print $1 }')
            echo "${apk^^}_SHA=$sha" >> $GITHUB_ENV
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.run_number }}
          name: QRVentory
          body: |
            ---
            ### Checksums

            | Variant        | SHA-256                  |
            |----------------|--------------------------|
            | Universal      | ${{ env.QRVENTORY_APK_SHA }} |
            | arm64-v8a     | ${{ env.QRVENTORY_ARM64_V8A_SHA }} |
            | armeabi-v7a   | ${{ env.QRVENTORY_ARMEABI_V7A_SHA }} |
            | x86           | ${{ env.QRVENTORY_X86_SHA }} |
            | x86_64        | ${{ env.QRVENTORY_X86_64_SHA }} |

            ## If you are unsure which version to choose, go with QRVentory.apk
          files: |
            QRVentory.apk
            QRVentory-arm64-v8a.apk
            QRVentory-armeabi-v7a.apk
            QRVentory-x86.apk
            QRVentory-x86_64.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.QRVENTORY_GITHUB_TOKEN }}
